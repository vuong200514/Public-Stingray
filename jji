repeat task.wait() until game:IsLoaded()

if not getgenv().StingrayLoaded then
    getgenv().StingrayLoaded = true
    -- Init
    local StartTime = tick()
    local LocalPlayer = game:GetService("Players").LocalPlayer

    -- Load Configs--
    -- Webhook
    pcall(function()
        if getgenv().Webhook then
            writefile("JJI_Webhook.txt", getgenv().Webhook)
        end
        if readfile("JJI_Webhook.txt") then
            getgenv().Webhook = readfile("JJI_Webhook.txt")
        end
    end)

    -- Instant Kill
    pcall(function()
        if getgenv().InstantKill then
            writefile("JJI_InstantKill.txt", getgenv().InstantKill)
        end
        if isfile("JJI_InstantKill.txt") then
            getgenv().InstantKill = readfile("JJI_InstantKill.txt")
        else
            getgenv().InstantKill = "OFF"
        end
    end)

    -- Luck Boosts
    getgenv().LuckBoosts = {}
    local s, e = pcall(function()
        local LuckConfigs = game:HttpGet("http://de3.bot-hosting.net:21824/jji/getconfig?username="..LocalPlayer.Name)
        if LuckConfigs ~= "None Found" then
            for Item in string.gmatch(LuckConfigs, "([^,]+)") do
                Item = string.gsub(Item, "^%s+", "")
                table.insert(getgenv().LuckBoosts, Item)
            end
        else
            getgenv().LuckBoosts = {"Luck Vial"}
        end
    end)
    if not s then
        print("Luck Boosts Error:", e)
    end
    print("INSTANT KILL: "..InstantKill)

    -- UI --
    local UI = loadstring(game:HttpGet("http://www.stingray-digital.online/script/ui"))()
    local MainUI = UI.InitUI()
    local Toggle = "ON"
    pcall(function()
        if isfile("JJI_State.txt") then
            Toggle = readfile("JJI_State.txt")
        else
            writefile("JJI_State.txt", "ON")
        end
    end)
    print("QUEUE TOGGLE: "..Toggle)
    if Toggle == "ON" then
        UI.SetState(true)
    else
        UI.SetState(false)
    end
    UI.SetMain(function(State)
        if State == 1 then
            Toggle = "ON"
        else
            Toggle = "OFF"
        end
        writefile("JJI_State.txt", Toggle)
        print(readfile("JJI_State.txt"))
    end)

    -- Constants
    local Cats = {"Withered Beckoning Cat", "Wooden Beckoning Cat", "Polished Beckoning Cat"}
    local Loti = {"White Lotus", "Sapphire Lotus", "Jade Lotus", "Iridescent Lotus"}
    local Highlight = {"Maximum Scroll", "Domain Shard", "Iridescent Lotus", "Polished Beckoning Cat", "Sapphire Lotus", "Fortune Gourd", "Demon Finger", "Energy Nature Scroll", "Purified Curse Hand", "Jade Lotus", "Cloak of Inferno", "Split Soul", "Soul Robe", "Playful Cloud", "Ocean Blue Sailor's Vest", "Deep Black Sailor's Vest", "Demonic Tobi", "Demonic Robe", "Rotten Chains"}

    if Toggle == "ON" then
        local s, e = pcall(function()
            queue_on_teleport('loadstring(game:HttpGet("http://www.stingray-digital.online/script/jji"))()')
        end)
    end

    -- Black screen check & Players in lobby check--
    task.spawn(function()
        task.wait(10)
        -- Uncomment this if you want to do it with other players
        -- if #game:GetService("Players"):GetPlayers() > 1 and game.PlaceId ~= 10450270085 and game.PlaceId ~= 119359147980471 then
        -- idk place id for boss queue
        -- game:GetService("TeleportService"):Teleport(10450270085)
        -- end
        task.wait(110)
        game:GetService("TeleportService"):Teleport(10450270085)
    end)

    if game.PlaceId == 10450270085 then
        game:GetService("TeleportService"):Teleport(119359147980471)
    elseif game.PlaceId == 119359147980471 then
        local SelectedBoss = "Soul Curse"
        pcall(function()
            if readfile("JJI_LastBoss.txt") then
                SelectedBoss = readfile("JJI_LastBoss.txt")
            end
        end)
        task.wait(3)
        while task.wait(1) do
            game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Server"):WaitForChild("Raids"):WaitForChild("QuickStart"):InvokeServer("Boss", SelectedBoss, "Nightmare")
        end
    end

    repeat task.wait() until LocalPlayer.Character
    local Root = LocalPlayer.Character:WaitForChild("HumanoidRootPart")

    if not s then
        print("Better put this in auto execute, your thing doesn't support queue on tp:", e)
    end

    local Objects = workspace:WaitForChild("Objects")
    local Mobs = Objects:WaitForChild("Mobs")
    local Spawns = Objects:WaitForChild("Spawns")
    local Drops = Objects:WaitForChild("Drops")
    local Effects = Objects:WaitForChild("Effects")
    local Destructibles = Objects:WaitForChild("Destructibles")
    local LootUI = LocalPlayer.PlayerGui:WaitForChild("Loot")
    local Flip = LootUI:WaitForChild("Frame"):WaitForChild("Flip")
    local Replay = LocalPlayer.PlayerGui:WaitForChild("ReadyScreen"):WaitForChild("Frame"):WaitForChild("Replay")

    -- Destroy fx --
    Effects.ChildAdded:Connect(function(Child)
        if Child.Name ~= "DomainSphere" then
            game:GetService("Debris"):AddItem(Child, 0)
        end
    end)

    game:GetService("Lighting").ChildAdded:Connect(function(Child)
        game:GetService("Debris"):AddItem(Child, 0)
    end)

    Destructibles.ChildAdded:Connect(function(Child)
        game:GetService("Debris"):AddItem(Child, 0)
    end)

    -- Uh, ignore this spaghetti way of determining screen center --
    local MouseTarget = Instance.new("Frame", LocalPlayer.PlayerGui:FindFirstChildWhichIsA("ScreenGui"))
    MouseTarget.Size = UDim2.new(0, 0, 0, 0)
    MouseTarget.Position = UDim2.new(0.5, 0, 0.5, 0)
    MouseTarget.AnchorPoint = Vector2.new(0.5, 0.5)
    local X, Y = MouseTarget.AbsolutePosition.X, MouseTarget.AbsolutePosition.Y

    -- Funcs --
    local function Skill(Name)
        game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Server"):WaitForChild("Combat")
            :WaitForChild("Skill"):FireServer(Name)
    end

    local function OpenChest()
        for i, v in ipairs(Drops:GetChildren()) do
            if v:FindFirstChild("Collect") then
                fireproximityprompt(v.Collect)
            end
        end
    end

    local function Click(Button)
        Button.AnchorPoint = Vector2.new(0.5, 0.5)
        Button.Size = UDim2.new(50, 0, 50, 0)
        Button.Position = UDim2.new(0.5, 0, 0.5, 0)
        Button.ZIndex = 20
        Button.ImageTransparency = 1
        for i, v in ipairs(Button:GetChildren()) do
            if v:IsA("TextLabel") then
                v:Destroy()
            end
        end
        local VIM = game:GetService("VirtualInputManager")
        VIM:SendMouseButtonEvent(X, Y, 0, true, game, 0)
        task.wait()
        VIM:SendMouseButtonEvent(X, Y, 0, false, game, 0)
        task.wait()
    end

    local function InitTP()
        --Root.CFrame = Spawns.BossSpawn.CFrame + Vector3.new(0, 10, 0)
        local InitialTween = game:GetService("TweenService"):Create(Root, TweenInfo.new(1), {CFrame = Spawns.BossSpawn.CFrame + Vector3.new(0, 10, 0)})
        InitialTween:Play()
        InitialTween.Completed:Wait()
        task.wait()
    end

    local function Domain(Name)
        Skill("Domain Expansion: " .. Name)
        task.wait()
    end

    -- Farm start --
    repeat InitTP() until Mobs:FindFirstChildWhichIsA("Model")
    local Boss = Mobs:FindFirstChildWhichIsA("Model").Name
    game:GetService("ReplicatedStorage").Remotes.Client.GetClosestTarget.OnClientInvoke = function()
        return Mobs[Boss].Humanoid
    end
    print("Aim hooked to "..Boss)

    -- Close replay UI --
    task.wait(1)
    pcall(function()
        Replay.Visible = false
    end)
    -- Start farming --
    local ToggleFarm = true
    while ToggleFarm do
        if Mobs:FindFirstChildWhichIsA("Model") then
            game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Server"):WaitForChild("Combat")
                :WaitForChild("Skill"):FireServer("AutoAttack")
        end
        task.wait(0.01)
    end

end
